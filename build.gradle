buildscript {
  ext.dagger_version = "2.9"
  ext.grpc_version = "1.3.0"
  ext.kotlin_version = "1.1.2"
}

plugins {
  id "org.jetbrains.kotlin.jvm" version "1.1.2"
  id "org.jetbrains.kotlin.kapt" version "1.1.2"
  id "com.github.hierynomus.license" version "0.14.0"
}

description = "ModelBox GRPC REPL"

apply plugin: "application"
apply plugin: "idea"

mainClassName = "io.modelbox.repl.Repl"
version = "0.1"

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre8"
  compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.15'

  compile "com.google.dagger:dagger:$dagger_version"
  kapt "com.google.dagger:dagger-compiler:$dagger_version"

  compile 'com.google.code.gson:gson:2.8.0'
  compile "io.grpc:grpc-protobuf:$grpc_version"
  compile "io.grpc:grpc-stub:$grpc_version"
  compile "io.grpc:grpc-netty:$grpc_version"
  compile 'io.netty:netty-tcnative-boringssl-static:1.1.33.Fork26'
  compile 'org.jline:jline:3.3.0'
}

idea {
  module {
    // Add the kapt output and mark it as generated
    sourceDirs += file("$buildDir/generated/source/kapt/main")
    testSourceDirs += file("$buildDir/generated/source/kapt/test")

    generatedSourceDirs += file("$buildDir/generated/source/kapt/main")
    generatedSourceDirs += file("$buildDir/generated/source/kapt/test")
  }
}

kotlin {
  experimental {
    coroutines "enable"
  }
}

repositories {
  jcenter()
}

/**
 * Used for development, since the gradle run task won't allow IO to be inherited.
 * https://github.com/jline/jline3/issues/77
 */
task fatJar(type: Jar) {
  manifest {
    attributes "Name": project.group,
        "Main-Class": project.mainClassName,
        "Version": project.version
  }
  classifier = 'all'
  from {
    configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
  } {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
  }
  with jar
}
